parameters:
  - name: adosServiceConnectionName
    type: string
  - name: appName
    type: string

steps:
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: ${{ parameters.adosServiceConnectionName }}
    appType: 'webAppLinux'
    WebAppName: ${{ parameters.appName }}
#    deployToSlotOrASE: true
    ResourceGroupName: 'wca-dev'
#    SlotName: 'inactive-slot'
    packageForLinux: '$(Pipeline.Workspace)/wca-api-business/Telstra.Core.Api.zip'
    RuntimeStack: 'DOTNETCORE|6.0'
    #StartupCommand: 'test'
    #AppSettings: 'test1'
    
- task: AzureAppServiceSettings@1
  displayName: Update app settings
  inputs:
    azureSubscription: ${{ parameters.adosServiceConnectionName }}
    appName: ${{ parameters.appName }}
#    slotName: 'inactive-slot'
    appSettings: |
      [
        {
          "name": "MYAPP_ports__http",
          "value": 80,
          "slotSetting": false
        },
        {
          "name": "MYAPP_ports__https",
          "value": 0,
          "slotSetting": false
        },
        {
          "name": "PORT",
          "value": 80,
          "slotSetting": false
        },
        {
          "name": "WEBSITES_PORT",
          "value": 80,
          "slotSetting": false
        },
        {
          "name": "MYAPP_ENVIRONMENT",
          "value": "Development",
          "slotSetting": false
        }
      ]

#- task: AzureAppServiceManage@0
#  inputs:
#    azureSubscription: 'Smart Spaces Development 2.0 (bb692fd0-5b3d-4bee-a37a-c2d5bf85a432)'
#    Action: 'Swap Slots'
#    WebAppName: 'wca-dev-api-business-feature-x'
#    ResourceGroupName: 'wca-dev'
#    SourceSlot: 'inactive-slot'
#    PreserveVnet: true