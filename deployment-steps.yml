parameters:
  - name: adosServiceConnectionName
    type: string
  - name: resourceGroupName
    type: string
  - name: appName
    type: string
  - name: appSlotName
    type: string
  - name: appShortCacheTime
    type: string
  - name: dmBaseUri
    type: string
  - name: dmAccessTokenUri
    type: string
  - name: dmRtspFeedUri
    type: string
  - name: dmClientId
    type: string
  - name: dmClientSecret
    type: string
  - name: dmGrantType
    type: string

steps:
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: ${{ parameters.adosServiceConnectionName }}
    appType: 'webAppLinux'
    WebAppName: ${{ parameters.appName }}
    deployToSlotOrASE: true
    ResourceGroupName: ${{ parameters.resourceGroupName }}
    SlotName: ${{ parameters.appSlotName }}
    packageForLinux: '$(Pipeline.Workspace)/wca-api-consumer/WCA.Consumer.Api.zip'
    RuntimeStack: 'DOTNETCORE|6.0'
    StartupCommand: 'dotnet WCA.Consumer.Api.dll'
    ShortCacheTime: ${{ parameters.appShortCacheTime }}
    #AppSettings: 'test1'
    
- task: AzureAppServiceSettings@1
  displayName: Update app settings
  inputs:
    azureSubscription: ${{ parameters.adosServiceConnectionName }}
    appName: ${{ parameters.appName }}
    slotName: ${{ parameters.appSlotName }}
    appSettings: |
      [
        {
          "name": "WCA_ports__http",
          "value": 80,
          "slotSetting": false
        },
        {
          "name": "WCA_ports__https",
          "value": 0,
          "slotSetting": false
        },
        {
          "name": "PORT",
          "value": 80,
          "slotSetting": false
        },
        {
          "name": "WEBSITES_PORT",
          "value": 80,
          "slotSetting": false
        },
        {
          "name": "WCA_ENVIRONMENT",
          "value": "Development",
          "slotSetting": false
        },
        {
          "name": "WCA_UseAd",
          "value": true,
          "slotSetting": false
        },
        {
          "name": "WCA_Short_Cache_Time",
          "value": ${{ parameters.appShortCacheTime }},
          "slotSetting": false
        },
        {
          "name": "WCA_DeviceManagementCredentials__BaseUri",
          "value": "${{ parameters.dmBaseUri }}",
          "slotSetting": false
        },
        {
          "name": "WCA_DeviceManagementCredentials__AccessTokenUri",
          "value": "${{ parameters.dmAccessTokenUri }}",
          "slotSetting": false
        },
        {
          "name": "WCA_DeviceManagementCredentials__RtspFeedUri",
          "value": "${{ parameters.dmRtspFeedUri }}",
          "slotSetting": false
        },
        {
          "name": "WCA_DeviceManagementCredentials__ClientId",
          "value": "${{ parameters.dmClientId }}",
          "slotSetting": false
        },
        {
          "name": "WCA_DeviceManagementCredentials__ClientSecret",
          "value": "${{ parameters.dmClientSecret }}",
          "slotSetting": false
        },
        {
          "name": "WCA_DeviceManagementCredentials__GrantType",
          "value": "${{ parameters.dmGrantType }}",
          "slotSetting": false
        }
      ]

# - task: AzureAppServiceManage@0
#   displayName: Swap inactive and active (production) slots
#   condition: and(succeeded(), ne('${{ parameters.appSlotName }}', 'production'))
#   inputs:
#       azureSubscription: ${{ parameters.adosServiceConnectionName }}
#       Action: "Swap Slots"
#       WebAppName: ${{ parameters.appName }}
#       ResourceGroupName: ${{ parameters.resourceGroupName }}
#       SourceSlot: ${{ parameters.appSlotName }}
